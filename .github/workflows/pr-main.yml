name: PR MAIN
on:
  pull_request:
    branches: main
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      # 检查缓存
      # 如果key命中缓存则直接将缓存的文件还原到 path 目录，从而减少流水线运行时间
      # 若 key 没命中缓存时，在当前Job成功完成时将自动创建一个新缓存
      - name: Cache
        # 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          # 缓存文件目录的路径
          path: |
            **/node_modules
          # key中定义缓存标志位的生成方式。runner.OS指当前环境的系统。外加对pnpm-lock.lock内容生成哈希码作为key值，如果yarn.lock改变则代表依赖有变化。
          # 这里用pnpm-lock.yaml而不是package.json是因为package.json中还有version和description之类的描述项目但和依赖无关的属性
          key: ${{runner.OS}}-${{hashFiles('**/pnpm-lock.yaml')}}

      - name: Installing Dependencies
        # 判断是否命中缓存，否则跳过该阶段
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Running Lint
        run: pnpm run lint
   